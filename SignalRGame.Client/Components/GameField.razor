    <div class="game-table">
        <div class="decorative-frame">
            <div class="game-container">
                <div class="dice-area">
                    @for (int i = 0; i < diceList.Count(); i++)
                    {
                        <div class="dice-slot @(diceList[i].IsReroll ? "" : "frozen")">
                            <Dice DiceValue="@diceList[i]"
                                  IsRolling="@diceList[i].IsRolling"
                                  OnToggleFreeze="ToggleDiceSelection" />
                        </div>
                    }
                </div>
                <div class="center-artwork">
                </div>
                <div class="opponents-dice-area">
                    @for (int i = 0; i < diceList.Count(); i++)
                    {
                        <div class="dice-slot @(diceList[i].IsReroll ? "" : "frozen")">
                            <Dice DiceValue="@diceList[i]"
                                  IsRolling="@diceList[i].IsRolling"
                                  OnToggleFreeze="ToggleDiceSelection" />
                        </div>
                    }
                </div>
            </div>
            <div class="bottom-panel">
                <button class="roll-button" @onclick="RollDice">Roll Dice</button>
                <button class="end-turn-button" @onclick="EndTurn">End Turn</button>
            </div>
        </div>
    </div>

    @code {
        private int curPlayer = 1;
        private List<DiceClass> diceList = new List<DiceClass>();

        protected override void OnInitialized()
        {
            for (int i = 0; i < 5; i++)
            {
                diceList.Add(new DiceClass { Id = i , IsRolling = false });
            }
        }

        private async void RollDice()
        {
            foreach (var dice in diceList)
            {
                if (dice.IsReroll)
                {
                    dice.IsRolling = true;
                }
            }

            StateHasChanged();

            await Task.Delay(1000);

            var rand = new Random();
            foreach (var dice in diceList)
            {
                if (dice.IsReroll)
                {
                    dice.Value = rand.Next(1, 7);
                    dice.IsRolling = false;
                }
            }

            StateHasChanged();
        }


        private void ToggleDiceSelection(DiceClass value)
        {
            Console.WriteLine($"{value.Id} is toggling freeze status.");
            value.IsReroll = !value.IsReroll;
            Console.WriteLine($"After toggle: IsReroll for dice {value.Id} is {value.IsReroll}");

            StateHasChanged();
        }

        private void EndTurn()
        {
            // Logic for ending the turn
        }
    }
